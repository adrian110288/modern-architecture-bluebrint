apply plugin: 'kotlin-kapt'

buildscript {

    ext.config = [
            compileSdk : 28,
            minSdk     : 21,
            targetSdk  : 28,
            versionCode: 1,
            versionName: "1.0"
    ]

//    Project-wide common dependencies

    ext.versions = [
            kotlin    : '1.2.70',
            junit     : '4.12',
            findbugs  : '3.0.2',
            rxjava    : '2.2.2',
            retrofit  : '2.4.0',
            inject    : '1',
            dagger    : '2.17',
            mockito   : '2.0.0-RC2',
            testrunner: '1.0.2',
            espresso  : '3.0.2'
    ]

    ext.dept = [
            kotlin         : "org.jetbrains.kotlin:kotlin-stdlib-jdk7:$versions.kotlin",
            junit          : "junit:junit:$versions.junit",
            rxjava         : "io.reactivex.rxjava2:rxjava:$versions.rxjava",
            retrofit       : "com.squareup.retrofit2:retrofit:$versions.retrofit",
            inject         : "javax.inject:javax.inject:$versions.inject",
            findbugs       : "com.google.code.findbugs:jsr305:$versions.findbugs",
            daggerLib      : "com.google.dagger:dagger-android:$versions.dagger",
            daggerSupport  : "com.google.dagger:dagger-android-support:$versions.dagger",
            daggerProcessor: "com.google.dagger:dagger-android-processor:$versions.dagger",
            daggerCompiler : "com.google.dagger:dagger-compiler:$versions.dagger",
            mockito        : "com.nhaarman.mockitokotlin2:mockito-kotlin:$versions.mockito",
            testrunner     : "com.android.support.test:runner:$versions.testrunner",
            espresso       : "com.android.support.test.espresso:espresso-core:$versions.espresso"
    ]

    repositories {
        google()
        jcenter()
    }

    dependencies {
        classpath 'com.android.tools.build:gradle:3.3.0-alpha13'
        classpath "org.jetbrains.kotlin:kotlin-gradle-plugin:$versions.kotlin"
    }
}

allprojects {
    repositories {
        google()
        jcenter()
    }

    ext.getPropertyByName = { propertyName ->
        Properties properties = new Properties();
        properties.load(project.rootProject.file("local.properties").newDataInputStream())
        return properties.getProperty(propertyName)
    }
}

task clean(type: Delete) {
    delete rootProject.buildDir
}
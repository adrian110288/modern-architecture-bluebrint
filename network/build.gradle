apply plugin: 'com.android.library'
apply plugin: 'kotlin-android'
apply plugin: 'kotlin-kapt'

android {
    compileSdkVersion config.compileSdk

    defaultConfig {
        minSdkVersion config.minSdk
        targetSdkVersion config.targetSdk
        versionCode config.versionCode
        versionName config.versionName
        buildConfigField "String", "API_KEY", "\"" + getApiKey() + "\""
    }

    buildTypes {
        release {
            minifyEnabled true
            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'
        }
        debug {
            minifyEnabled false
        }
    }
}

dependencies {
    implementation dept.kotlin
    implementation dept.findbugs
    implementation dept.rxjava
    implementation dept.inject
    implementation dept.daggerLib
    implementation dept.daggerSupport

    kapt dept.daggerProcessor
    kapt dept.daggerCompiler

    implementation "com.squareup.okhttp3:okhttp:3.10.0"
    implementation "com.squareup.okhttp3:logging-interceptor:3.10.0"
    implementation "com.google.code.gson:gson:2.8.4"
    implementation "com.squareup.retrofit2:retrofit:2.4.0"
    implementation "com.jakewharton.retrofit:retrofit2-rxjava2-adapter:1.0.0"
    implementation "com.squareup.retrofit2:converter-gson:2.4.0"

    testImplementation dept.junit
    testImplementation dept.mockito
}

def getApiKey() {
    Properties properties = new Properties();
    properties.load(project.rootProject.file("local.properties").newDataInputStream())
    return properties.getProperty("apiKey")
}
